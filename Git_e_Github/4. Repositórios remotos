- Exibir repositórios remotos
	$ git remote
		Lista nomes abreviados
	$ git remote -v
		Mostra as URLs que o Git tem armazenado pelo nome abreviado a ser usado para ler ou gravar naquele repositório remoto

- Adicionar repositórios remotos
	$ git remote add <shortname> <url>

- Obter dados dos repositórios remotos
	Atenção: o comando git fetch só baixa os dados para o seu repositório local,
			 ele não é automaticamente mesclado(merge) com nenhum trabalho seu
			 ou modificação que você esteja trabalhando atualmente.
	$ git fetch
	$ git fetch <nome-do-repositorio>

- Publicar no repositório remoto
		$ git push
		$ git push [remote-name] [branch-name]

- Inspecionar servidor remoto
	$ git remote show [nome-remoto]
	
- Renomeando remotes
	$ git remote rename <nome-antigo> <novo-nome>

- Remover remotes
	$ git remote remove <nome-do-repositorio>
	ou
	$ git remote rm <nome-do-repositorio>

- Tags e marcação de versão
	Uma tag do tipo leve é muito parecida com um branch que não muda. Ela apenas aponta para um commit em especifico.
	Tags anotadas são um armazenamento completo de objetos no banco de dados do Git.
	Elas têm checksum, contem marcações de nome, email e data; têm uma mensagem de tag; e podem ser assinadas e asseguradas pela GPG.
	
	Atenção: Tags não podem ser removidas.
	
	- Criar tag anotada (-a)
		$ git tag -a <nome-tag> -m "mensagem da tag"
		$ git tag -a <nome-tag>
			Sem passar o -m vai abrir editor para editar mensagem
		$ git tag -a v1.0 -m "mensagem da tag"
	
	- Criar tag leve (não usar -a, -s ou -m)
		$ git tag v1.0
		
	- Ver tags existentes
		$ git tag
			Mostra nomes das tags existentes
		$ git show <nome-tag>
			Se a tag for leve vai aparecer apenas o commit. Se for anotada vão aparecer a mensagem, data, etc.
	
	- Criar tag de commit antigo
		$ git tag -a <nome-tag> <checksum-do-commit(ou-parte-dele)>
			"git log --pretty=oneline" para ver lista simplificada dos commits

	- Compartilhamento de tags
		$ git push origin <tagname>
			Por padrão, o comando git push não envia as tags para os servidores remoto.
			Você terá que explicitamente enviar as tags para o servidor de compartilhamento depois de tê-las criado.
			Esse processo é semelhante a compartilhar branches remotos – você pode executar git push origin [tagname].
		$ git push origin --tags
			Para enviar várias tags de uma vez
	
	- Criar um branch idêntico a uma tag
		$ git checkout -b <branchname> <tagname>

- Criar alias
	$ git config --global alias.co checkout
	$ git config --global alias.br branch
	$ git config --global alias.ci commit
	$ git config --global alias.st status
	$ git config --global alias.last 'log -1 HEAD'
		Dessa forma são criados apelidos dos comandos. Nos exemplos acima "git co" equivale a "git checkout" e assim por diante.